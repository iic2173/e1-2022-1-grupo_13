# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7
  aws-cli: circleci/aws-cli@2.0.6
  aws-code-deploy: circleci/aws-code-deploy@2.0.0

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: circleci/node:12
      - image: postgres:latest
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: db-api
      - image: nginx:latest
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      
      - run:
          name: install dependencies
          command: |
            npm install
            yarn install
            yarn global add react-scripts@3.4.1 -g --silent
  aws-cli-cred-setup:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_ACCESS_SECRET
          aws-region: AWS_REGION_NAME
workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - build-and-test
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
  aws-cli:
    jobs:
      - aws-cli-cred-setup:
          context: aws
  deploy-application:
    jobs:
      - aws-code-deploy/deploy:
          application-name: CodeDeployGitHubDemo-App
          bundle-bucket: codepipeline-us-east-1-934325042191
          bundle-key: 3efc74e0-e122-48c7-b2a0-a4ec5ae5671e
          deployment-group: CodeDeployGitHubDemo-DepGrp
          service-role-arn: arn:aws:iam::421689746159:role/CodeDeployServiceRole


