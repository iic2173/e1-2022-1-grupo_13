version: "3.4"

services:
  api:
    container_name: "friends_map"
    build: 
      context: ./api
    depends_on:
      - db
    ports:
      - "3000:3000"
    command: "npm start"
    volumes:
      - ./api:/api
      - /api/node_modules
    networks:
      - app-network
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgis_server
      - JWT_SECRET=${JWT_SECRET}
  db:
    container_name: "postgis_server"
    command: postgres -c stats_temp_directory=/tmp
    image: mdillon/postgis:latest
    restart: always    
    ports: 
    - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - db
      - api
    networks:
      - app-network

############ django workers
  web:
    build:
      context: ./django-celery-project
      dockerfile: ./compose/local/django/Dockerfile
    image: workers_backend_web
    # '/start' is the shell script used to run the service
    command: /start
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - .:/app
    ports:
      - 8010:8000
    # env_file is used to manage the env variables of our project
    env_file:
      - ./django-celery-project/.env
    depends_on:
      - redis
      - db_workers
    networks:
      - worker-network
  db_workers:
    image: postgres:14-alpine
    volumes:
      - postgres_data_workers:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=db_workers
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
    ports: 
      - "5433:5432"
    networks:
      - worker-network
  redis:
    image: redis:6-alpine
    networks:
      - worker-network

  celery_worker:
    build:
      context: ./django-celery-project
      dockerfile: ./compose/local/django/Dockerfile
    image: workers_backend_celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - ./django-celery-project/.env
    depends_on:
      - redis
      - db_workers
    networks:
      - worker-network

  celery_beat:
    build:
      context: ./django-celery-project
      dockerfile: ./compose/local/django/Dockerfile
    image: workers_backend_celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - ./django-celery-project/.env
    depends_on:
      - redis
      - db_workers
    networks:
      - worker-network

  flower:
    build:
      context: ./django-celery-project
      dockerfile: ./compose/local/django/Dockerfile
    image: workers_backend_celery_flower
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - ./django-celery-project/.env
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db_workers
    networks:
      - worker-network

networks:
  app-network:
    driver: bridge
  worker-network:
    driver: bridge
volumes:
  postgres_data:
  postgres_data_workers:
    
